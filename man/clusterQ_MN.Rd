% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterQ_MN.R
\name{clusterQ_MN}
\alias{clusterQ_MN}
\title{Inference under nonregrularity with M-out-of-N cluster bootstrap}
\usage{
clusterQ_MN(
  completeData,
  s1Formula,
  s2Formula,
  s2Treat,
  cluster,
  bootNum = 1000,
  alpha = 0.05,
  nu = 0.05,
  lambda = 0.025,
  ...
)
}
\arguments{
\item{completeData}{A matrix contains all data including covariates, outcome and treatment}

\item{s1Formula}{A formula that specifying the regression model for stage 1 Q-function}

\item{s2Formula}{A formula that specifying the regression model for stage 2 Q-function}

\item{s2Treat}{A string that records variable name of stage 2 treatment in s2_data}

\item{cluster}{A string that records variable name of the cluster identifier}

\item{bootNum}{A number indicates number of bootstrap sampling in constructing CIs}

\item{alpha}{A number indicates the type I error of inference, the default value is 0.05}

\item{nu}{A number indicates the desired global type I error rate for t-test, the default value is 0.05}

\item{lambda}{A number between 0 and 1 that governs the smallest acceptable resample size. Typical choice are between [0.025, 0.1], default value is 0.025}

\item{...}{Additional parameters in lm or lme}
}
\value{
A list containing 
\itemize{
  \item{s1Coefficients:}{ Stage 1 regression coefficients}
  \item{s2Coefficients:}{ Stage 2 regression coefficients}
  \item{s1Inference:}{ Stage 1 coefficients and confidence interval}
  \item{s2Inference:}{ Stage 2 coefficients and confidence interval}
  \item{estM:}{ Estimated stage 1 bootstrap resample size}
}
}
\description{
A function that use clustered Q-learning to produce estimation and inference on regression parameters for two stages. It uses M-out-of-N cluster bootstrap (M resample out of N samples) to adjust for potential nonregrularity for the first stage inference.
}
\examples{
library(dplyr)
expit <- function(x) {return(exp(x)/ (1 + exp(x)))}
N = 100
n = 2000
ni = n/N
rho = 0.4

# Coefficients for the outcome model
gamma <- c(g0 = 1, g1 = 0.1, g2 = 0.2, g3 = 0.3, g4 = 0.4,
           g5 = 0.5, g6 = 0.6, g7 = 0.7, g8 = 0.8, g9 = 0.9,
           g10 = 1, g11 = 0, g12 = 0, g13 = 0, g14 = 0,
           g15 = 0)

# Parameters for Z21 and Z22 simulation
delta <- c(d1 = 0.5, d2 = 0.3, d3 = 0.4, d4 = 0.2)

set.seed(412) # For reproducibility

# Simulate Stage 1 data
df <- data.frame(
  cluster_id = rep(1:N, each = ni),
  X11 = rnorm(n), # Stage 1 patient-level data
  X12 = rnorm(n), # Another Stage 1 patient-level variable
  X21 = rnorm(n), # Stage 2 patient-level data
  X22 =  rnorm(n), # Another Stage 2 patient-level variable
  Z11 = rep(rbinom(N, 1, 0.5), each = ni),
  Z12 = rep(rbinom(N, 1, 0.5), each = ni),
  A1 = rep(2*rbinom(N, 1, 0.5)-1, each = ni),
  A2 = rep(2*rbinom(N, 1, 0.5)-1, each = ni)
)
# Generating residuals with intra-cluster correlation (ICC)
Sigma <- matrix(rho, N, N) + diag(1-rho, N)  # Exchangeable correlation matrix
cluster_residuals <- MASS::mvrnorm(n = ni, mu = rep(0, N), Sigma = Sigma)

df = mutate(df, Z21 = rep(rbinom(N, 1, expit(delta["d1"] * Z11 + delta["d2"] * A1)), each = ni))
df = mutate(df, Z22 = rep(rbinom(N, 1, expit(delta["d3"] * Z12 + delta["d4"] * A1)), each = ni))
df = mutate(df, Y =  gamma["g0"] +
           gamma["g1"] * X11 + gamma["g2"] * X12 +
           gamma["g3"] * X21 + gamma["g4"] * X22 +
           gamma["g5"] * Z11 + gamma["g6"] * Z12 +
           gamma["g7"] * Z21 + gamma["g8"] * Z22 +
           gamma["g9"] * A1 + gamma["g10"] * A2 +
           gamma["g11"] * Z11 * A1 + gamma["g12"] * Z12 * A1 +
           gamma["g13"] * Z21 * A2 + gamma["g14"] * Z22 * A2 +
           gamma["g15"] * A1 * A2 + as.numeric(cluster_residuals))
  
# stage 1 model
Formula1 = formula(Y ~ X11 + X12 + Z11 + Z12 + A1 + Z11 * A1 + Z12 * A1)

# stage 2 model
Formula2 = formula(Y ~ X11 + X12 + X21 + X22 + Z11 + Z12 + Z21 + Z22 + A1 + A2 + 
Z11 * A1 + Z12 * A1 + Z21 * A2 + Z22 * A2 + A1 * A2)
result = clusterQ_MN(completeData = df,s1Formula = Formula1,s2Formula = Formula2, s2Treat = "A2",cluster = "cluster_id", bootNum =100)
result$s1Inference # check stage 1 inference
result$s2Inference # check stage 2 inference
}
